{"version":3,"sources":["TrBotContext.js","LandingPage/LandingPage.js","CreateAccount/CreateAccount.js","ValidateNameEntry/ValidateNameEntry.js","SavePattern/SavePattern.js","samplers.js","Header/Header.js","TransportControls/TransportControls.js","TransportSliders/TransportSliders.js","Transport/Transport.js","PatternSelect/PatternSelect.js","Instrument/Instrument.js","Sequencer/Sequencer.js","ClearSteps/ClearSteps.js","Interface/Interface.js","config.js","App.js","index.js"],"names":["TrBotContext","React","createContext","patterns","patternSelect","currentPatternId","bpm","volume","kickSteps","snareSteps","hh1Steps","hh2Steps","clapSteps","percSteps","updatePatternSelect","updateBpm","updateVolume","updateStep","playSequencer","stopSequencer","savePattern","deletePattern","clearSteps","LandingPage","className","htmlFor","type","id","name","to","Component","CreateAccount","ValidateNameEntry","props","message","SavePattern","state","touched","handleSubmit","event","callback","preventDefault","target","pattern_name","value","context","history","push","changeNameState","setState","nameEntry","this","trim","existingNames","map","pattern","toLowerCase","length","indexOf","Consumer","onSubmit","e","onChange","required","validateNameEntry","disabled","contextType","allSampler","Tone","urls","C4","D4","E4","F4","G4","A4","onload","console","log","baseUrl","Header","handleClick","stop","cancel","disconnect","onClick","TransportControls","TransportSliders","handleChange","min","max","defaultValue","Transport","PatternSelect","index","stopPlayback","placeHolder","hidden","patternOptions","uuidv4","Instrument","instrument","steps","instrumentSteps","step","Sequencer","ClearSteps","Interface","App","createInstrSteps","kick_steps","snare_steps","hh1_steps","hh2_steps","clap_steps","perc_steps","patternId","vol","gainControl","gain","connect","toDestination","stepIndex","oldKickSteps","newKickSteps","oldSnareSteps","newSnareSteps","oldHh1Steps","newHh1Steps","oldHh2Steps","newHh2Steps","oldClapSteps","newClapSteps","oldPercSteps","newPercSteps","instrumentSeqs","notes","scheduleRepeat","time","i","note","triggerAttackRelease","start","patternData","requestOptions","method","headers","body","JSON","stringify","fetch","config","then","response","ok","Error","json","catch","err","setTimeout","responseJson","newPatternsList","filter","emptySteps","undefined","contextValue","Provider","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f14473b9.chunk.js","sourcesContent":["import React from 'react'\n\nconst TrBotContext = React.createContext({\n    patterns: [],\n    patternSelect: 0,\n    currentPatternId: null,\n    bpm: 120,\n    volume: 100,\n    kickSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    snareSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    hh1Steps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    hh2Steps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    clapSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    percSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    updatePatternSelect: () => {},\n    updateBpm: () => {},\n    updateVolume: () => {},\n    updateStep: () => {},\n    playSequencer: () => {},\n    stopSequencer: () => {},\n    savePattern: () => {},\n    deletePattern: () => {},\n    clearSteps: () => {}\n})\n\nexport default TrBotContext;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom'\nimport './LandingPage.css'\n\nclass LandingPage extends Component {\n\n    render() {\n        return (\n            <div className='LandingPage'>\n                <h1>Welcome to TR-BOT</h1>\n                <div className='LandingPage_intro'>\n                    <p>\n                    The TR-BOT is a drum machine application that allows a user to create musical percussion tracks in their browser. The TR-BOT's name is inspired by the iconic line of Roland's hardware drum machines (i.e. TR-808, TR-909, TR-606) and by default, the app supplies 6 individual drum sounds that include:\n                    </p>\n                    <ul>\n                        <li>Kick drum (Kick)</li>\n                        <li>Snare drum (Snare)</li>\n                        <li>High Hat 1 (HH1)</li>\n                        <li>High Hat 2 (HH2)</li>\n                        <li>Handclap (Clap)</li>\n                        <li>Percussion (Perc)</li>\n                    </ul>\n                    <p>\n                    The grid is that of a 16-step sequencer where each square (or step) represents a subdivision of musical time from left to right. The user is encouraged to experiment with building their own unique patterns by toggling any of the steps on or off. \n                    </p>\n                    <p>\n                    Now let's get to making some music!\n                    </p>\n                </div>\n                <h3>Login:</h3>\n                <form className='LandingPage_login'>\n                    <div className='LandingPage_input'>\n                        <label htmlFor='username'>Username:</label>\n                        <input type='text' id='username' name='username'/>\n                    </div>\n                    <div className='LandingPage_input'>\n                        <label htmlFor='password'>Password:</label>\n                        <input type='password' id='password' name='password'/>\n                    </div>\n                    <Link to={'/trbot'}>\n                        <button type='submit'>Submit</button>\n                    </Link>\n                </form>\n                <Link to={'/createaccount'}>\n                    <p className='LandingPage_signup'>Not a user? Sign Up</p>\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport default LandingPage;","import React, {Component} from 'react';\nimport './CreateAccount.css'\nimport {Router,Link} from 'react-router-dom'\n\n\nclass CreateAccount extends Component {\n\n    render() {\n        return(\n            <div className='CreateAccount'>\n                <h1>Create Account:</h1>\n                <form className='CreateAccount_form'>\n                    <div className='CreateAccount_input'>\n                        <label htmlFor='username'>Username:</label>\n                        <input type='text' id='username' name='username'/>\n                    </div>\n                    <div className='CreateAccount_input'>\n                        <label htmlFor='password'>Password:</label>\n                        <input type='password' id='password' name='password'/>\n                    </div>\n                    <div className='CreateAccount_input'>\n                        <label htmlFor='confirm_password'>Confirm Password:</label>\n                        <input type='password' id='confirm_password' name='confirm_password'/>\n                    </div>\n                    <div className='CreateAccount_buttons'>\n                        <Link to={'/'}>\n                            <button type='submit'>Submit</button>\n                        </Link>\n                        <Link to={'/'}>\n                            <button>Cancel</button>\n                        </Link>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default CreateAccount;","import React from 'react'\nimport './ValidateNameEntry.css'\n\nexport default function ValidateNameEntry(props) {\n    if (props.message) {\n        return <div className='ValidateNameEntry_error'>{props.message}</div>\n    }\n    return <></>\n}","import React, {Component} from 'react';\nimport './SavePattern.css'\nimport {Link} from 'react-router-dom'\nimport TrBotContext from '../TrBotContext.js'\nimport ValidateNameEntry from '../ValidateNameEntry/ValidateNameEntry'\n\nclass SavePattern extends Component {\n    static contextType = TrBotContext\n\n    state = {\n        name: '',\n        touched: false\n    }\n\n    handleSubmit = (event, callback) => {\n        event.preventDefault()\n        const patternData = {\n            \"name\": event.target.pattern_name.value,\n            \"user_id\": 0,\n            \"kick_steps\": this.context.kickSteps,\n            \"snare_steps\": this.context.snareSteps,\n            \"hh1_steps\": this.context.hh1Steps,\n            \"hh2_steps\": this.context.hh2Steps,\n            \"clap_steps\": this.context.clapSteps,\n            \"perc_steps\": this.context.percSteps\n        }\n        callback(patternData)\n        this.props.history.push('/trbot')\n    }\n\n    changeNameState = (event) => {\n        this.setState({\n            name: event.target.value,\n            touched: true\n        })\n    }\n\n    validateNameEntry() {\n        const nameEntry = this.state.name.trim()\n        const existingNames = this.context.patterns.map(pattern => pattern.name.toLowerCase())\n        \n\n        if(nameEntry.length === 0 && this.state.touched) {\n            return 'Name is required'\n        } else if(existingNames.indexOf(nameEntry.toLowerCase()) !== -1) {\n            return 'This name already exists'\n        }\n\n    }\n\n    render() {\n        return (\n            \n            <div className='SavePattern'>\n                <h2>Save Pattern:</h2>\n                <TrBotContext.Consumer>\n                    {({savePattern }) => (\n                        <form className='SavePattern_form' onSubmit={(e) => this.handleSubmit(e, savePattern)}>\n                            <div className='SavePattern_input'>\n                                <label htmlFor='pattern_name'>Pattern Name:</label>\n                                <input type='text' id='pattern_name' name='pattern_name' onChange={(e) => this.changeNameState(e)}required/>\n                                <ValidateNameEntry message={this.validateNameEntry()}/>\n                            </div>\n                            <div className='SavePattern_buttons'>\n                                <button type='submit' disabled={!this.state.touched || this.state.name.trim().length === 0 ? true : false}>Submit</button>\n                                <Link to={'/trbot'}>\n                                    <button>Cancel</button>\n                                </Link>\n                            </div>   \n                        </form>\n                    )}\n                </TrBotContext.Consumer>\n            </div>\n        )\n    }\n}\n\nexport default SavePattern;","import * as Tone from 'tone'\n\nexport const allSampler =\n\n    new Tone.Sampler({\n        urls: {\n            C4: \"trbotkick.mp3\" ,\n            D4: \"trbotsnare.mp3\",\n            E4: \"trbothh1.mp3\",\n            F4: \"trbothh2.mp3\",\n            G4: \"trbotclap.mp3\", \n            A4: \"trbotperc.mp3\",\n        },\n        onload: function() {console.log('samples loaded')},\n        baseUrl: \"/audio/\",\n    })\n\n    \n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom'\nimport './Header.css'\nimport * as Tone from 'tone'\nimport {allSampler} from '../samplers.js'\n\nclass Header extends Component {\n\n    handleClick = () => {\n        Tone.Transport.stop() \n        Tone.Transport.cancel()\n        allSampler.disconnect()\n    }\n\n    render() {\n        return (\n            <div className='Header'>\n                <header>\n                    <Link to={'/trbot'}>\n                        <h1>TR-BOT</h1>\n                    </Link>\n                     <button onClick={() => this.handleClick()}>\n                        <Link to={'/'}>\n                            Log Out\n                        </Link>\n                    </button>\n                </header>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport './TransportControls.css'\nimport TrBotContext from '../TrBotContext.js'\n\nclass TransportControls extends Component {\n    static contextType = TrBotContext\n\n    handleClick = (callback) => {\n      callback()\n    }\n\n    render() {\n        \n        return (\n            <div className='TransportControls'>\n              <TrBotContext.Consumer>\n                {({playSequencer, stopSequencer}) => (\n                  <>\n                  <button onClick={() => this.handleClick(playSequencer)}>Play</button>\n                  <button onClick={() => this.handleClick(stopSequencer)}>Stop</button>\n                  </>\n                )}\n              </TrBotContext.Consumer>\n            </div>\n        )\n    }\n\n}\n\nexport default TransportControls;","import React, {Component} from 'react';\nimport './TransportSliders.css'\nimport TrBotContext from '../TrBotContext.js'\n\nclass TransportSliders extends Component {\n    static contextType = TrBotContext\n\n    handleChange = (e, callback) => {\n        callback(e.target.value)\n    }\n\n    render() {\n        const volume = this.context.volume\n        const bpm = this.context.bpm\n\n        return (\n            <div className='TransportSliders'>\n                <TrBotContext.Consumer>\n                    {({updateBpm, updateVolume}) => (\n                        <>\n                        <label htmlFor=\"volume\">Volume: {volume}</label>\n                        <input type=\"range\" id=\"volume\" name=\"volume\" min=\"0\" max=\"100\" defaultValue={100} onChange={(e) => this.handleChange(e, updateVolume)}/>  \n                        <label htmlFor=\"bpm\">BPM: {bpm}</label>\n                        <input type=\"range\" id=\"bpm\" name=\"bpm\" min=\"40\" max=\"300\" defaultValue={120}  onChange={(e) => this.handleChange(e, updateBpm)}/>\n                        </>\n                    )}\n                </TrBotContext.Consumer>\n            </div>\n        )\n    }\n\n}\n\nexport default TransportSliders;","import React, {Component} from 'react';\nimport './Transport.css'\nimport TransportControls from '../TransportControls/TransportControls';\nimport TransportSliders from '../TransportSliders/TransportSliders';\n\nclass Transport extends Component {\n\n    render() {\n        return (\n            <div className='Transport'>\n                <TransportControls />\n                <TransportSliders />\n            </div>\n        )\n    }\n\n}\n\nexport default Transport;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom'\nimport './PatternSelect.css'\nimport * as Tone from 'tone'\nimport { v4 as uuidv4 } from 'uuid';\nimport TrBotContext from '../TrBotContext.js'\nimport {allSampler} from '../samplers.js'\n\nclass PatternSelect extends Component {\n    static contextType = TrBotContext\n\n    handleChange = (e, callback) => {\n        Tone.Transport.stop() //stop playback\n        Tone.Transport.cancel()\n        allSampler.disconnect()\n   \n        const index = e.target.value\n        const id = this.context.patterns[index].id\n\n        callback(index, id)\n    }\n\n    handleClick = (callback) => {\n        const id = this.context.currentPatternId\n        console.log(callback)\n        callback(id)\n    }\n\n    stopPlayback = () => {\n        Tone.Transport.stop() \n        Tone.Transport.cancel()\n        allSampler.disconnect()\n    }\n\n    render() {\n        function placeHolder(id) { //conditional placeholder option when no saved patterns exist\n            if(id === null) {\n                return (\n                    <option value=\"\" key='xxx' hidden>New Pattern</option>\n                )\n            }\n        }\n        let patternOptions = this.context.patterns.map((pattern, index) => {\n            return(\n            <option name={pattern.name} value={index} key={uuidv4()}>{pattern.name}</option>\n            )\n        })\n\n        return (\n            <div className='PatternSelect'>\n                <TrBotContext.Consumer>\n                    {({updatePatternSelect, deletePattern}) => (\n                        <>\n                         <label htmlFor=\"pattern\">Pattern:</label>\n                         <select id=\"pattern\" name=\"pattern\" value={this.context.patternSelect === null ? '' : this.context.patternSelect} onChange={(e) => this.handleChange(e, updatePatternSelect)}>\n                            {placeHolder(this.context.currentPatternId)}\n                            {patternOptions}\n                         </select>\n                         <Link to={'savepattern'}>\n                            <button className='PatternSelect_button' onClick={() => this.stopPlayback()}>Save</button>\n                         </Link>\n                    <button className='PatternSelect_button' onClick={() => this.handleClick(deletePattern)}>Delete</button>\n                        </>\n                    )} \n                </TrBotContext.Consumer>\n            </div>\n        )\n    }\n}\n\nexport default PatternSelect;","import React, {Component} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './Instrument.css'\nimport TrBotContext from '../TrBotContext.js'\n\n\n\nclass Instrument extends Component {\n    static contextType = TrBotContext\n\n    handleClick = (e, value, instrument, callback) => {\n        const stepIndex = e.target.id\n        callback(stepIndex, value, instrument)\n        \n\n    }\n   \n    render() {\n        const instrument = this.props.instrument\n        const steps = this.props.instrumentSteps.map((step, index) => {\n            if(step === 1){\n                return (\n                    <TrBotContext.Consumer key={uuidv4()}>\n                        {({updateStep}) => (\n                            <span key={uuidv4()} className=\"step clicked\" id={index} value={1} onClick={(e) => this.handleClick(e, 1, instrument, updateStep)}>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                        )}\n                    </TrBotContext.Consumer>\n                )\n            }\n            return (\n                <TrBotContext.Consumer key={uuidv4()}>\n                        {({updateStep}) => (\n                            <span key={uuidv4()} className=\"step\" id={index} value={0} onClick={(e) => this.handleClick(e, 0, instrument, updateStep)}>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                        )}\n                    </TrBotContext.Consumer>\n                )\n            })\n    \n        return (\n            <div className='Instrument row'>\n                {steps}\n            </div>\n        )\n    }\n}\n\nexport default Instrument;","import React, {Component} from 'react';\nimport './Sequencer.css'\nimport TrBotContext from '../TrBotContext.js'\nimport Instrument from '../Instrument/Instrument'\n\n\nclass Sequencer extends Component {\n    static contextType = TrBotContext\n\n\n\n    render() {\n\n        return (\n            <div className='Sequencer'>\n                <div className='Sequencer_display'>\n                    <div className='Sequencer_channel'>\n                        <label>Kick</label>\n                        <Instrument instrumentSteps={this.context.kickSteps} instrument='kick' />\n                    </div>\n                    <div className='Sequencer_channel'>\n                        <label>Snare</label>\n                        <Instrument instrumentSteps={this.context.snareSteps} instrument='snare' />\n                    </div>\n                    <div className='Sequencer_channel'>\n                        <label>HH1</label>\n                        <Instrument instrumentSteps={this.context.hh1Steps} instrument='hh1' />\n                    </div>\n                    <div className='Sequencer_channel'>\n                        <label>HH2</label>\n                        <Instrument instrumentSteps={this.context.hh2Steps} instrument='hh2'/>\n                    </div>\n                    <div className='Sequencer_channel'>\n                        <label>Clap</label>\n                        <Instrument instrumentSteps={this.context.clapSteps} instrument='clap' />\n                    </div>\n                    <div className='Sequencer_channel'>\n                        <label>Perc</label>\n                        <Instrument instrumentSteps={this.context.percSteps} instrument='perc'/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Sequencer;\n\n//<Instrument instrument={instrObj.key} />","import React, {Component} from 'react';\nimport './ClearSteps.css'\nimport TrBotContext from '../TrBotContext.js'\n\nclass ClearSteps extends Component {\n    static contextType = TrBotContext\n\n    handleClick = (callback) => {\n      callback()\n    }\n\n    render() {\n        \n        return (\n            <div className='ClearSteps'>\n              <TrBotContext.Consumer>\n                {({clearSteps}) => (\n                  <button onClick={() => this.handleClick(clearSteps)}>Clear Steps</button> \n                )}\n              </TrBotContext.Consumer>\n            </div>\n        )\n    }\n\n}\n\nexport default ClearSteps;","import React, {Component} from 'react';\nimport './Interface.css'\nimport Header from '../Header/Header'\nimport Transport from '../Transport/Transport'\nimport PatternSelect from '../PatternSelect/PatternSelect'\nimport Sequencer from '../Sequencer/Sequencer'\nimport ClearSteps from '../ClearSteps/ClearSteps'\n\n\n\nclass Interface extends Component {\n    \n    render() {\n        \n        return (\n            <div className='Interface'>\n                <Header />\n                <Transport />\n                <ClearSteps />\n                <Sequencer />\n                <PatternSelect />\n            </div>\n        )\n    }\n}\n\nexport default Interface;","export default {\n    API_ENDPOINT: `https://tr-bot-api.herokuapp.com/`,\n  }","import React, {Component} from 'react';\nimport './App.css'\nimport TrBotContext from './TrBotContext.js'\nimport {Route} from 'react-router-dom'\nimport * as Tone from 'tone'\nimport LandingPage from './LandingPage/LandingPage'\nimport CreateAccount from './CreateAccount/CreateAccount';\nimport SavePattern from './SavePattern/SavePattern'\nimport Interface from './Interface/Interface'\nimport {allSampler} from './samplers.js'\nimport config from './config'\n\nclass App extends Component {\n  static contextType = TrBotContext\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            patterns: [],\n            patternSelect: null,\n            currentPatternId: null,\n            bpm: 120,\n            volume: 100,\n            kickSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            snareSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            hh1Steps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            hh2Steps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            clapSteps:[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            percSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        }\n\n    }\n\n    createInstrSteps = (patternSelect) => {\n      this.setState({\n          kickSteps: this.state.patterns[patternSelect].kick_steps,\n          snareSteps: this.state.patterns[patternSelect].snare_steps,\n          hh1Steps: this.state.patterns[patternSelect].hh1_steps,\n          hh2Steps: this.state.patterns[patternSelect].hh2_steps,\n          clapSteps: this.state.patterns[patternSelect].clap_steps,\n          percSteps: this.state.patterns[patternSelect].perc_steps,\n      })\n    }\n\n\n    updatePatternSelect = (index, patternId) => {\n      this.setState({\n          patternSelect: index,\n          currentPatternId: patternId\n\n      }, () => {\n          this.createInstrSteps(this.state.patternSelect)\n      }) \n      \n    }\n\n    updateBpm = (bpm) => {\n      this.setState({\n          bpm: bpm\n      })\n      Tone.Transport.bpm.value = this.state.bpm\n    }\n\n    updateVolume = (vol) => {\n      this.setState({\n          volume: vol,\n      })\n      this.gainControl()\n    }\n\n    gainControl = () => {\n      allSampler.disconnect()\n      const gain = new Tone.Gain(this.state.volume / 100 < .05 ? 0 : this.state.volume / 100 )\n      allSampler.connect(gain)\n      gain.toDestination()\n    }\n\n\n    updateStep = (stepIndex, value, instrument) => {\n      \n      switch (instrument) {\n          case 'kick':\n              const oldKickSteps = this.state.kickSteps;\n              oldKickSteps[stepIndex] = 1 - value\n              const newKickSteps = oldKickSteps\n\n              this.setState({\n                  kickSteps: newKickSteps\n              })\n              break;\n          case 'snare':\n              const oldSnareSteps = this.state.snareSteps;\n              oldSnareSteps[stepIndex] = 1 - value\n              const newSnareSteps = oldSnareSteps\n\n              this.setState({\n                  snareSteps: newSnareSteps\n              })\n              break;\n          case 'hh1':\n              const oldHh1Steps = this.state.hh1Steps;\n              oldHh1Steps[stepIndex] = 1 - value\n              const newHh1Steps = oldHh1Steps\n\n              this.setState({\n                  hh1Steps: newHh1Steps\n              })\n              break;\n          case 'hh2':\n              const oldHh2Steps = this.state.hh2Steps;\n              oldHh2Steps[stepIndex] = 1 - value\n              const newHh2Steps = oldHh2Steps\n              \n              this.setState({\n                  hh2Steps: newHh2Steps\n              })\n              break;\n          case 'clap':\n              const oldClapSteps = this.state.clapSteps;\n              oldClapSteps[stepIndex] = 1 - value\n              const newClapSteps = oldClapSteps\n              \n              this.setState({\n                  clapSteps: newClapSteps\n              })\n              break;\n          case 'perc':\n              const oldPercSteps = this.state.percSteps;\n              oldPercSteps[stepIndex] = 1 - value\n              const newPercSteps = oldPercSteps\n              \n              this.setState({\n                  percSteps: newPercSteps\n              })\n              break;\n          default:\n              console.log('That row does not exist')\n      }  \n    }\n\n    playSequencer = () => {\n      console.log('Play')\n      allSampler.disconnect()\n      Tone.Transport.cancel()\n      \n      this.gainControl()\n\n      const instrumentSeqs = [this.state.kickSteps, this.state.snareSteps, this.state.hh1Steps, this.state.hh2Steps, this.state.clapSteps, this.state.percSteps]\n      const notes = ['C4', 'D4', 'E4', 'F4', 'G4', 'A4']\n      let index = 0;\n\n      Tone.start()                    \n      Tone.Transport.scheduleRepeat(repeat, '16n')\n      Tone.Transport.start()\n      \n      \n      function repeat(time) {\n          let step = index % 16;\n          for (let i = 0; i < notes.length; i++) {  //replace notes with samplers\n              //let sampler = samplers[i];\n              let note = notes[i]\n              let sequence = instrumentSeqs[i];\n              if (sequence[step] === 1)allSampler.triggerAttackRelease([note], '16n', time) //allSampler with sampler\n          }\n          index++;\n      }\n\n    }\n\n    stopSequencer = () => {\n      console.log('Stop')\n      Tone.Transport.stop()\n      Tone.Transport.cancel()\n      allSampler.disconnect()\n    }\n\n    clearSteps = () => {\n        console.log('Steps cleared')\n        this.setState({\n            kickSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            snareSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            hh1Steps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            hh2Steps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            clapSteps:[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            percSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        })\n\n        Tone.Transport.stop()\n        Tone.Transport.cancel()\n        allSampler.disconnect()\n    }\n\n    savePattern = (patternData) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json' },\n            body: JSON.stringify(patternData)\n        }\n\n        fetch(`${config.API_ENDPOINT}api/patterns`, requestOptions)\n            .then(response => {\n                if(!response.ok) {\n                    throw new Error('Could not save pattern')\n                }\n                return response.json()\n            })\n            .catch(err => console.log(err.message))\n               \n        console.log('Pattern Saved')\n\n        this.state.patterns.push(patternData)\n        \n        setTimeout(() => { // refreshes pattern list and updates pattern ID's from database and sets up new blank pattern\n            fetch(`${config.API_ENDPOINT}api/patterns`)\n                .then(response => {\n                    if(!response.ok) {\n                        throw new Error('Could not retrieve updated patterns')\n                    }\n                    return response.json()\n                })\n                .then(responseJson => {\n                    this.setState({\n                        patterns: responseJson,\n                        currentPatternId: null,\n                        patternSelect: null,\n                        kickSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                        snareSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                        hh1Steps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                        hh2Steps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                        clapSteps:[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                        percSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]  \n                    })\n                })\n                .catch(err => console.log(err.message))\n        }, 200)\n    }\n\n    deletePattern = (id) => {\n        Tone.Transport.stop() //stop playback\n        Tone.Transport.cancel()\n        allSampler.disconnect()\n        \n        fetch(`${config.API_ENDPOINT}api/patterns/${id}`, {method: 'DELETE'})\n          .then(response => {\n              if(!response.ok) throw new Error('Could not delete pattern')  \n          })\n          .catch(err => console.log(err.message))\n\n\n        const newPatternsList = this.state.patterns.filter(pattern => pattern.id !== id)\n\n        const emptySteps = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        \n        this.setState({\n            patterns: newPatternsList,\n            currentPatternId: newPatternsList[this.state.patternSelect] === undefined ? null : newPatternsList[this.state.patternSelect].id,\n            kickSteps: newPatternsList[this.state.patternSelect] === undefined ? emptySteps : newPatternsList[this.state.patternSelect].kick_steps,\n            snareSteps: newPatternsList[this.state.patternSelect] === undefined ? emptySteps : newPatternsList[this.state.patternSelect].snare_steps,\n            hh1Steps: newPatternsList[this.state.patternSelect] === undefined ? emptySteps : newPatternsList[this.state.patternSelect].hh1_steps,\n            hh2Steps: newPatternsList[this.state.patternSelect] === undefined ? emptySteps : newPatternsList[this.state.patternSelect].hh2_steps,\n            clapSteps: newPatternsList[this.state.patternSelect] === undefined ? emptySteps : newPatternsList[this.state.patternSelect].clap_steps,\n            percSteps: newPatternsList[this.state.patternSelect] === undefined ? emptySteps : newPatternsList[this.state.patternSelect].perc_steps\n\n        })\n    }\n\n    componentDidMount() {\n\n      fetch(`${config.API_ENDPOINT}api/patterns`)\n          .then(response => {\n              if(!response.ok) {\n                  throw new Error('Could not retrieve patterns')\n              }\n              return response.json()\n          })\n          .then(responseJson => {\n              this.setState({\n                  patterns: responseJson\n              })\n              if(responseJson.length > 0) {\n                this.createInstrSteps(this.state.patternSelect)\n              }\n          })\n          .catch(err => console.log(err.message))\n      \n    }\n\n\n    render() {\n        const contextValue = {\n        patterns: this.state.patterns,\n        patternSelect: this.state.patternSelect,\n        currentPatternId: this.state.currentPatternId,\n        bpm: this.state.bpm,\n        volume: this.state.volume,\n        kickSteps: this.state.kickSteps,\n        snareSteps: this.state.snareSteps,\n        hh1Steps: this.state.hh1Steps,\n        hh2Steps: this.state.hh2Steps,\n        clapSteps:this.state.clapSteps,\n        percSteps: this.state.percSteps,\n        updatePatternSelect: this.updatePatternSelect,\n        updateBpm: this.updateBpm,\n        updateVolume: this.updateVolume,\n        updateStep: this.updateStep,\n        playSequencer: this.playSequencer,\n        stopSequencer: this.stopSequencer,\n        savePattern: this.savePattern,\n        deletePattern: this.deletePattern,\n        clearSteps: this.clearSteps\n        }\n\n    return (\n      <main className='App'>\n        <TrBotContext.Provider value={contextValue}>\n          <Route\n            exact\n            path={'/'}\n            component={LandingPage}/>\n          <Route\n            exact\n            path={'/createaccount'}\n            component={CreateAccount}/>\n          <Route\n            exact\n            path={'/trbot'}\n            component={Interface}/>\n          <Route\n            exact\n            path={'/savepattern'}\n            component={SavePattern}/>\n          </TrBotContext.Provider>\n      </main>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n  );"],"sourceRoot":""}