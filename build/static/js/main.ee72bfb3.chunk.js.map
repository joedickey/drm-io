{"version":3,"sources":["TrBotContext.js","LandingPage/LandingPage.js","CreateAccount/CreateAccount.js","ValidateNameEntry/ValidateNameEntry.js","SavePattern/SavePattern.js","samplers.js","Header/Header.js","TransportControls/TransportControls.js","TransportSliders/TransportSliders.js","Transport/Transport.js","PatternSelect/PatternSelect.js","Instrument/Instrument.js","StepTracker/StepTracker.js","Sequencer/Sequencer.js","ClearSteps/ClearSteps.js","Interface/Interface.js","config.js","App.js","index.js"],"names":["TrBotContext","React","createContext","patterns","patternSelect","currentPatternId","bpm","volume","kickSteps","snareSteps","hh1Steps","hh2Steps","clapSteps","percSteps","currentStep","updatePatternSelect","updateBpm","updateVolume","updateStep","playSequencer","stopSequencer","savePattern","deletePattern","clearSteps","LandingPage","className","htmlFor","type","id","name","to","Component","CreateAccount","ValidateNameEntry","props","message","SavePattern","state","touched","handleSubmit","event","callback","preventDefault","target","pattern_name","value","context","history","push","changeNameState","setState","nameEntry","this","trim","existingNames","map","pattern","toLowerCase","length","indexOf","Consumer","onSubmit","e","onChange","required","validateNameEntry","disabled","contextType","allSampler","Tone","urls","C4","baseUrl","D4","E4","F4","G4","A4","onload","console","log","Header","handleClick","stop","cancel","disconnect","onClick","TransportControls","TransportSliders","handleChange","min","max","defaultValue","Transport","PatternSelect","index","stopPlayback","placeHolder","hidden","patternOptions","uuidv4","Instrument","instrument","steps","instrumentSteps","step","StepTracker","Sequencer","stepTracker","ClearSteps","Interface","API_ENDPOINT","App","createInstrSteps","kick_steps","snare_steps","hh1_steps","hh2_steps","clap_steps","perc_steps","patternId","vol","gainControl","gain","connect","toDestination","stepIndex","oldKickSteps","newKickSteps","oldSnareSteps","newSnareSteps","oldHh1Steps","newHh1Steps","oldHh2Steps","newHh2Steps","oldClapSteps","newClapSteps","oldPercSteps","newPercSteps","instrumentSeqs","notes","scheduleRepeat","time","i","note","triggerAttackRelease","transportVisual","start","prevState","patternData","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","ok","Error","json","catch","err","setTimeout","responseJson","newPatternsList","filter","emptySteps","undefined","contextValue","Provider","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"shBA0BeA,G,MAxBMC,IAAMC,cAAc,CACrCC,SAAU,GACVC,cAAe,EACfC,iBAAkB,KAClBC,IAAK,IACLC,OAAQ,IACRC,UAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzDC,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1DC,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxDC,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxDC,UAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzDC,UAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzDC,YAAa,KACbC,oBAAqB,aACrBC,UAAW,aACXC,aAAc,aACdC,WAAY,aACZC,cAAe,aACfC,cAAe,aACfC,YAAa,aACbC,cAAe,aACfC,WAAY,gB,eC4BDC,G,6KA5CP,OACI,sBAAKC,UAAU,cAAf,UACI,mDACA,sBAAKA,UAAU,oBAAf,UACI,4UAGA,+BACI,kDACA,oDACA,kDACA,kDACA,iDACA,sDAEJ,sRAGA,uEAIJ,wCACA,uBAAMA,UAAU,oBAAhB,UACI,sBAAKA,UAAU,oBAAf,UACI,uBAAOC,QAAQ,WAAf,uBACA,uBAAOC,KAAK,OAAOC,GAAG,WAAWC,KAAK,gBAE1C,sBAAKJ,UAAU,oBAAf,UACI,uBAAOC,QAAQ,WAAf,uBACA,uBAAOC,KAAK,WAAWC,GAAG,WAAWC,KAAK,gBAE9C,cAAC,IAAD,CAAMC,GAAI,SAAV,SACI,wBAAQH,KAAK,SAAb,yBAGR,cAAC,IAAD,CAAMG,GAAI,iBAAV,SACI,mBAAGL,UAAU,qBAAb,0C,GAxCMM,cCkCXC,G,6KA9BP,OACI,sBAAKP,UAAU,gBAAf,UACI,iDACA,uBAAMA,UAAU,qBAAhB,UACI,sBAAKA,UAAU,sBAAf,UACI,uBAAOC,QAAQ,WAAf,uBACA,uBAAOC,KAAK,OAAOC,GAAG,WAAWC,KAAK,gBAE1C,sBAAKJ,UAAU,sBAAf,UACI,uBAAOC,QAAQ,WAAf,uBACA,uBAAOC,KAAK,WAAWC,GAAG,WAAWC,KAAK,gBAE9C,sBAAKJ,UAAU,sBAAf,UACI,uBAAOC,QAAQ,mBAAf,+BACA,uBAAOC,KAAK,WAAWC,GAAG,mBAAmBC,KAAK,wBAEtD,sBAAKJ,UAAU,wBAAf,UACI,cAAC,IAAD,CAAMK,GAAI,IAAV,SACI,wBAAQH,KAAK,SAAb,sBAEJ,cAAC,IAAD,CAAMG,GAAI,IAAV,SACI,2D,GAxBAC,c,YCFb,SAASE,EAAkBC,GACtC,OAAIA,EAAMC,QACC,qBAAKV,UAAU,0BAAf,SAA0CS,EAAMC,UAEpD,6B,ICDLC,E,4MAGFC,MAAQ,CACJR,KAAM,GACNS,SAAS,G,EAGbC,aAAe,SAACC,EAAOC,GACnBD,EAAME,iBAWND,EAVoB,CAChB,KAAQD,EAAMG,OAAOC,aAAaC,MAClC,QAAW,EACX,WAAc,EAAKC,QAAQtC,UAC3B,YAAe,EAAKsC,QAAQrC,WAC5B,UAAa,EAAKqC,QAAQpC,SAC1B,UAAa,EAAKoC,QAAQnC,SAC1B,WAAc,EAAKmC,QAAQlC,UAC3B,WAAc,EAAKkC,QAAQjC,YAG/B,EAAKqB,MAAMa,QAAQC,KAAK,W,EAG5BC,gBAAkB,SAACT,GACf,EAAKU,SAAS,CACVrB,KAAMW,EAAMG,OAAOE,MACnBP,SAAS,K,kEAKb,IAAMa,EAAYC,KAAKf,MAAMR,KAAKwB,OAC5BC,EAAgBF,KAAKN,QAAQ3C,SAASoD,KAAI,SAAAC,GAAO,OAAIA,EAAQ3B,KAAK4B,iBAGxE,OAAwB,IAArBN,EAAUO,QAAgBN,KAAKf,MAAMC,QAC7B,oBACmD,IAApDgB,EAAcK,QAAQR,EAAUM,eAC/B,gCADJ,I,+BAMD,IAAD,OACL,OAEI,sBAAKhC,UAAU,cAAf,UACI,+CACA,cAAC,EAAamC,SAAd,UACK,gBAAEvC,EAAF,EAAEA,YAAF,OACG,uBAAMI,UAAU,mBAAmBoC,SAAU,SAACC,GAAD,OAAO,EAAKvB,aAAauB,EAAGzC,IAAzE,UACI,sBAAKI,UAAU,oBAAf,UACI,uBAAOC,QAAQ,eAAf,2BACA,uBAAOC,KAAK,OAAOC,GAAG,eAAeC,KAAK,eAAekC,SAAU,SAACD,GAAD,OAAO,EAAKb,gBAAgBa,IAAGE,UAAQ,IAC1G,cAAC,EAAD,CAAmB7B,QAAS,EAAK8B,yBAErC,sBAAKxC,UAAU,sBAAf,UACI,wBAAQE,KAAK,SAASuC,UAAW,EAAK7B,MAAMC,SAA6C,IAAlC,EAAKD,MAAMR,KAAKwB,OAAOK,OAA9E,oBACA,cAAC,IAAD,CAAM5B,GAAI,SAAV,SACI,8D,GA5DVC,aAApBK,EACK+B,YAAcnE,EAsEVoC,QCpBFgC,G,YArDT,IAAIC,IAAa,CACbC,KAAM,CACFC,GAAI,iBAERC,QAAS,YAKb,IAAIH,IAAa,CACbC,KAAM,CACFC,GAAI,kBAERC,QAAS,YAKb,IAAIH,IAAa,CACbC,KAAM,CACFC,GAAI,gBAERC,QAAS,YAKb,IAAIH,IAAa,CACbC,KAAM,CACFC,GAAI,gBAERC,QAAS,YAKb,IAAIH,IAAa,CACbC,KAAM,CACFC,GAAI,iBAERC,QAAS,YAKb,IAAIH,IAAa,CACbC,KAAM,CACFC,GAAI,iBAERC,QAAS,YAMb,IAAIH,IAAa,CACbC,KAAM,CACFC,GAAI,gBACJE,GAAI,iBACJC,GAAI,eACJC,GAAI,eACJC,GAAI,gBACJC,GAAI,iBAERC,OAAQ,WAAYC,QAAQC,IAAI,mBAChCR,QAAS,aCrCFS,E,4MAxBXC,YAAc,WACVb,IAAec,OACfd,IAAee,SACfhB,EAAWiB,c,uDAGL,IAAD,OACL,OACI,qBAAK5D,UAAU,SAAf,SACI,mCACI,cAAC,IAAD,CAAMK,GAAI,SAAV,SACI,0CAEH,wBAAQwD,QAAS,kBAAM,EAAKJ,eAA5B,SACG,cAAC,IAAD,CAAMpD,GAAI,IAAV,gC,GAhBHC,aCFfwD,G,wNAGFL,YAAc,SAACzC,GACbA,K,uDAGQ,IAAD,OAEL,OACI,qBAAKhB,UAAU,oBAAf,SACE,cAAC,EAAamC,SAAd,UACG,gBAAEzC,EAAF,EAAEA,cAAeC,EAAjB,EAAiBA,cAAjB,OACC,qCACA,wBAAQkE,QAAS,kBAAM,EAAKJ,YAAY/D,IAAxC,kBACA,wBAAQmE,QAAS,kBAAM,EAAKJ,YAAY9D,IAAxC,8B,GAfcW,cAA1BwD,EACKpB,YAAcnE,EAwBVuF,QCzBTC,G,kNAGFC,aAAe,SAAC3B,EAAGrB,GACfA,EAASqB,EAAEnB,OAAOE,Q,uDAGZ,IAAD,OACCtC,EAAS6C,KAAKN,QAAQvC,OACtBD,EAAM8C,KAAKN,QAAQxC,IAEzB,OACI,qBAAKmB,UAAU,mBAAf,SACI,cAAC,EAAamC,SAAd,UACK,gBAAE5C,EAAF,EAAEA,UAAWC,EAAb,EAAaA,aAAb,OACG,qCACA,wBAAOS,QAAQ,SAAf,qBAAiCnB,KACjC,uBAAOoB,KAAK,QAAQC,GAAG,SAASC,KAAK,SAAS6D,IAAI,IAAIC,IAAI,MAAMC,aAAc,IAAK7B,SAAU,SAACD,GAAD,OAAO,EAAK2B,aAAa3B,EAAG7C,MACzH,wBAAOS,QAAQ,MAAf,kBAA2BpB,KAC3B,uBAAOqB,KAAK,QAAQC,GAAG,MAAMC,KAAK,MAAM6D,IAAI,KAAKC,IAAI,MAAMC,aAAc,IAAM7B,SAAU,SAACD,GAAD,OAAO,EAAK2B,aAAa3B,EAAG9C,kB,GAnB9Ge,cAAzByD,EACKrB,YAAcnE,EA4BVwF,QCfAK,E,uKAVP,OACI,sBAAKpE,UAAU,YAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,W,GANQM,a,gBCGlB+D,E,4MAGFL,aAAe,SAAC3B,EAAGrB,GACf4B,IAAec,OACfd,IAAee,SACfhB,EAAWiB,aAEX,IAAMU,EAAQjC,EAAEnB,OAAOE,MAGvBJ,EAASsD,EAFE,EAAKjD,QAAQ3C,SAAS4F,GAAOnE,K,EAK5CsD,YAAc,SAACzC,GACX,IAAMb,EAAK,EAAKkB,QAAQzC,iBACxB0E,QAAQC,IAAIvC,GACZA,EAASb,I,EAGboE,aAAe,WACX3B,IAAec,OACfd,IAAee,SACfhB,EAAWiB,c,uDAGL,IAAD,OACL,SAASY,EAAYrE,GACjB,GAAU,OAAPA,EACC,OACI,wBAAQiB,MAAM,GAAaqD,QAAM,EAAjC,wBAAqB,OAIjC,IAAIC,EAAiB/C,KAAKN,QAAQ3C,SAASoD,KAAI,SAACC,EAASuC,GACrD,OACA,wBAAQlE,KAAM2B,EAAQ3B,KAAMgB,MAAOkD,EAAnC,SAA0DvC,EAAQ3B,MAAnBuE,kBAInD,OACI,qBAAK3E,UAAU,gBAAf,SACI,cAAC,EAAamC,SAAd,UACK,gBAAE7C,EAAF,EAAEA,oBAAqBO,EAAvB,EAAuBA,cAAvB,OACG,qCACC,uBAAOI,QAAQ,UAAf,sBACA,yBAAQE,GAAG,UAAUC,KAAK,UAAUgB,MAAsC,OAA/B,EAAKC,QAAQ1C,cAAyB,GAAK,EAAK0C,QAAQ1C,cAAe2D,SAAU,SAACD,GAAD,OAAO,EAAK2B,aAAa3B,EAAG/C,IAAxJ,UACIkF,EAAY,EAAKnD,QAAQzC,kBACzB8F,KAEJ,cAAC,IAAD,CAAMrE,GAAI,cAAV,SACG,wBAAQL,UAAU,uBAAuB6D,QAAS,kBAAM,EAAKU,gBAA7D,oBAER,wBAAQvE,UAAU,uBAAuB6D,QAAS,kBAAM,EAAKJ,YAAY5D,IAAzE,gC,GArDQS,aAAtB+D,EACK3B,YAAcnE,EA6DV8F,QC/DTO,G,wNAGFnB,YAAc,SAACpB,EAAGjB,EAAOyD,EAAY7D,GAEjCA,EADkBqB,EAAEnB,OAAOf,GACPiB,EAAOyD,I,uDAKrB,IAAD,OACDxF,EAAcsC,KAAKN,QAAQhC,YACzBwF,EAAalD,KAAKlB,MAAMoE,WACxBC,EAAQnD,KAAKlB,MAAMsE,gBAAgBjD,KAAI,SAACkD,EAAMV,GAEhD,OAAY,IAATU,EAEK,cAAC,EAAa7C,SAAd,UACK,gBAAE1C,EAAF,EAAEA,WAAF,OACG,sBAAqBO,UAAS,uBAAkBX,IAAgBiF,EAAQ,eAAiB,IAAMnE,GAAImE,EAAOlD,MAAO,EAAGyC,QAAS,SAACxB,GAAD,OAAO,EAAKoB,YAAYpB,EAAG,EAAGwC,EAAYpF,IAAvK,6BAAWkF,iBAFSA,eAMjB,IAATK,EAEF,cAAC,EAAa7C,SAAd,UACS,gBAAE1C,EAAF,EAAEA,WAAF,OACG,sBAAqBO,UAAS,eAAUX,IAAgBiF,EAAQ,eAAiB,IAAMnE,GAAImE,EAAOlD,MAAO,EAAGyC,QAAS,SAACxB,GAAD,OAAO,EAAKoB,YAAYpB,EAAG,EAAGwC,EAAYpF,IAA/J,6BAAWkF,iBAFKA,oBAF7B,KAWX,OACI,qBAAK3E,UAAU,iBAAf,SACK8E,Q,GApCQxE,cAAnBsE,EACKlC,YAAcnE,EAyCVqG,QC5BAK,G,6KAXP,OACI,sBAAKjF,UAAU,cAAf,UACI,sBAAqBA,UAAS,gBAA9B,cAAW2E,eACX,sBAAqB3E,UAAS,iBAA9B,cAAW2E,eACX,sBAAqB3E,UAAS,gBAA9B,cAAW2E,eACX,sBAAqB3E,UAAS,iBAA9B,eAAW2E,sB,GARDrE,cCApB4E,E,uKAOE,OACI,sBAAKlF,UAAU,YAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,yCACA,cAAC,EAAD,CAAY+E,gBAAiBpD,KAAKN,QAAQtC,UAAW8F,WAAW,YAEpE,sBAAK7E,UAAU,oBAAf,UACI,0CACA,cAAC,EAAD,CAAY+E,gBAAiBpD,KAAKN,QAAQrC,WAAY6F,WAAW,aAErE,sBAAK7E,UAAU,oBAAf,UACI,wCACA,cAAC,EAAD,CAAY+E,gBAAiBpD,KAAKN,QAAQpC,SAAU4F,WAAW,WAEnE,sBAAK7E,UAAU,oBAAf,UACI,wCACA,cAAC,EAAD,CAAY+E,gBAAiBpD,KAAKN,QAAQnC,SAAU2F,WAAW,WAEnE,sBAAK7E,UAAU,oBAAf,UACI,yCACA,cAAC,EAAD,CAAY+E,gBAAiBpD,KAAKN,QAAQlC,UAAW0F,WAAW,YAEpE,sBAAK7E,UAAU,oBAAf,UACI,yCACA,cAAC,EAAD,CAAY+E,gBAAiBpD,KAAKN,QAAQjC,UAAWyF,WAAW,eAGxE,qBAAK7E,UAAU,sBAAf,SACQ,cAAC,EAAD,CAAa+E,gBAAiBpD,KAAKN,QAAQ8D,YAAaN,WAAW,c,GApCnEvE,aAAlB4E,EACKxC,YAAcnE,EA0CV2G,QC9CTE,G,kNAGF3B,YAAc,SAACzC,GACbA,K,uDAGQ,IAAD,OAEL,OACI,qBAAKhB,UAAU,aAAf,SACE,cAAC,EAAamC,SAAd,UACG,gBAAErC,EAAF,EAAEA,WAAF,OACC,wBAAQ+D,QAAS,kBAAM,EAAKJ,YAAY3D,IAAxC,kC,GAbOQ,cAAnB8E,EACK1C,YAAcnE,EAqBV6G,QCAAC,E,uKAZP,OACI,sBAAKrF,UAAU,YAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GAVQM,aCVXgF,EAAY,+CCYnBC,E,kDAGF,WAAY9E,GAAQ,IAAD,8BACf,cAAMA,IAoBV+E,iBAAmB,SAAC7G,GAClB,EAAK8C,SAAS,CACV1C,UAAW,EAAK6B,MAAMlC,SAASC,GAAe8G,WAC9CzG,WAAY,EAAK4B,MAAMlC,SAASC,GAAe+G,YAC/CzG,SAAU,EAAK2B,MAAMlC,SAASC,GAAegH,UAC7CzG,SAAU,EAAK0B,MAAMlC,SAASC,GAAeiH,UAC7CzG,UAAW,EAAKyB,MAAMlC,SAASC,GAAekH,WAC9CzG,UAAW,EAAKwB,MAAMlC,SAASC,GAAemH,cA5BjC,EAiCnBxG,oBAAsB,SAACgF,EAAOyB,GAC5B,EAAKtE,SAAS,CACV9C,cAAe2F,EACf1F,iBAAkBmH,IAEnB,WACC,EAAKP,iBAAiB,EAAK5E,MAAMjC,mBAvCpB,EA4CnBY,UAAY,SAACV,GACX,EAAK4C,SAAS,CACV5C,IAAKA,IAET+D,IAAe/D,IAAIuC,MAAQ,EAAKR,MAAM/B,KAhDrB,EAmDnBW,aAAe,SAACwG,GACd,EAAKvE,SAAS,CACV3C,OAAQkH,IAEZ,EAAKC,eAvDY,EA0DnBA,YAAc,WACZtD,EAAWiB,aACX,IAAMsC,EAAO,IAAItD,IAAU,EAAKhC,MAAM9B,OAAS,IAAM,IAAM,EAAI,EAAK8B,MAAM9B,OAAS,KACnF6D,EAAWwD,QAAQD,GACnBA,EAAKE,iBA9DY,EAkEnB3G,WAAa,SAAC4G,EAAWjF,EAAOyD,GAE9B,OAAQA,GACJ,IAAK,OACD,IAAMyB,EAAe,EAAK1F,MAAM7B,UAChCuH,EAAaD,GAAa,EAAIjF,EAC9B,IAAMmF,EAAeD,EAErB,EAAK7E,SAAS,CACV1C,UAAWwH,IAEf,MACJ,IAAK,QACD,IAAMC,EAAgB,EAAK5F,MAAM5B,WACjCwH,EAAcH,GAAa,EAAIjF,EAC/B,IAAMqF,EAAgBD,EAEtB,EAAK/E,SAAS,CACVzC,WAAYyH,IAEhB,MACJ,IAAK,MACD,IAAMC,EAAc,EAAK9F,MAAM3B,SAC/ByH,EAAYL,GAAa,EAAIjF,EAC7B,IAAMuF,EAAcD,EAEpB,EAAKjF,SAAS,CACVxC,SAAU0H,IAEd,MACJ,IAAK,MACD,IAAMC,EAAc,EAAKhG,MAAM1B,SAC/B0H,EAAYP,GAAa,EAAIjF,EAC7B,IAAMyF,EAAcD,EAEpB,EAAKnF,SAAS,CACVvC,SAAU2H,IAEd,MACJ,IAAK,OACD,IAAMC,EAAe,EAAKlG,MAAMzB,UAChC2H,EAAaT,GAAa,EAAIjF,EAC9B,IAAM2F,EAAeD,EAErB,EAAKrF,SAAS,CACVtC,UAAW4H,IAEf,MACJ,IAAK,OACD,IAAMC,EAAe,EAAKpG,MAAMxB,UAChC4H,EAAaX,GAAa,EAAIjF,EAC9B,IAAM6F,EAAeD,EAErB,EAAKvF,SAAS,CACVrC,UAAW6H,IAEf,MACJ,QACI3D,QAAQC,IAAI,6BA5HH,EAgInB7D,cAAgB,WACd4D,QAAQC,IAAI,QACZZ,EAAWiB,aACXhB,IAAee,SAEf,EAAKsC,cAEL,IAAMiB,EAAiB,CAAC,EAAKtG,MAAM7B,UAAW,EAAK6B,MAAM5B,WAAY,EAAK4B,MAAM3B,SAAU,EAAK2B,MAAM1B,SAAU,EAAK0B,MAAMzB,UAAW,EAAKyB,MAAMxB,WAC1I+H,EAAQ,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACzC7C,EAAQ,EAEZ,EAAK7C,SAAS,CACVpC,YAAa,IAGjBuD,MACAA,IAAewE,gBAKf,SAAgBC,GAEZ,IADA,IAAIrC,EAAOV,EAAQ,GACVgD,EAAI,EAAGA,EAAIH,EAAMlF,OAAQqF,IAAK,CAEnC,IAAIC,EAAOJ,EAAMG,GAEM,IADRJ,EAAeI,GACjBtC,IAAYrC,EAAW6E,qBAAqB,CAACD,GAAO,MAAOF,GAE5E/C,MAbkC,OACtC1B,IAAewE,eAAe,EAAKK,gBAAiB,OACpD7E,IAAe8E,SAlJE,EAkKnBD,gBAAkB,WACd,EAAKhG,UAAS,SAAAkG,GAAS,MAAK,CACxBtI,aAAcsI,EAAUtI,YAAc,GAAK,QApKhC,EAwKnBM,cAAgB,WACd2D,QAAQC,IAAI,QACZX,IAAec,OACfd,IAAee,SACfhB,EAAWiB,aACX,EAAKnC,SAAS,CACVpC,YAAa,QA9KA,EAkLnBS,WAAa,WACTwD,QAAQC,IAAI,iBACZ,EAAK9B,SAAS,CACV1C,UAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzDC,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1DC,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxDC,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxDC,UAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxDC,UAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAG7D,EAAKO,iBA7LU,EAgMnBC,YAAc,SAACgI,GACX,IAAMC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUN,IAGzBO,MAAM,GAAD,OAAI7C,EAAJ,gBAAgCuC,GAChCO,MAAK,SAAAC,GACF,IAAIA,EAASC,GACT,MAAM,IAAIC,MAAM,0BAEpB,OAAOF,EAASG,UAEnBC,OAAM,SAAAC,GAAG,OAAIpF,QAAQC,IAAImF,EAAIhI,YAElC4C,QAAQC,IAAI,iBAEZ,EAAK3C,MAAMlC,SAAS6C,KAAKqG,GAEzBe,YAAW,WACPR,MAAM,GAAD,OAAI7C,EAAJ,iBACA8C,MAAK,SAAAC,GACF,IAAIA,EAASC,GACT,MAAM,IAAIC,MAAM,uCAEpB,OAAOF,EAASG,UAEnBJ,MAAK,SAAAQ,GACF,EAAKnH,SAAS,CACV/C,SAAUkK,EACVhK,iBAAkB,KAClBD,cAAe,KACfI,UAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzDC,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1DC,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxDC,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxDC,UAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxDC,UAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,QAGhEqJ,OAAM,SAAAC,GAAG,OAAIpF,QAAQC,IAAImF,EAAIhI,cACnC,MA1OY,EA6OnBb,cAAgB,SAACM,GACb,EAAKR,gBAELwI,MAAM,GAAD,OAAI7C,EAAJ,wBAAgCnF,GAAM,CAAC2H,OAAQ,WACjDM,MAAK,SAAAC,GACF,IAAIA,EAASC,GAAI,MAAM,IAAIC,MAAM,+BAEpCE,OAAM,SAAAC,GAAG,OAAIpF,QAAQC,IAAImF,EAAIhI,YAGhC,IAAMmI,EAAkB,EAAKjI,MAAMlC,SAASoK,QAAO,SAAA/G,GAAO,OAAIA,EAAQ5B,KAAOA,KAEvE4I,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEjE,EAAKtH,SAAS,CACV/C,SAAUmK,EACVjK,sBAAgEoK,IAA9CH,EAAgB,EAAKjI,MAAMjC,eAA+B,KAAOkK,EAAgB,EAAKjI,MAAMjC,eAAewB,GAC7HpB,eAAyDiK,IAA9CH,EAAgB,EAAKjI,MAAMjC,eAA+BoK,EAAaF,EAAgB,EAAKjI,MAAMjC,eAAe8G,WAC5HzG,gBAA0DgK,IAA9CH,EAAgB,EAAKjI,MAAMjC,eAA+BoK,EAAaF,EAAgB,EAAKjI,MAAMjC,eAAe+G,YAC7HzG,cAAwD+J,IAA9CH,EAAgB,EAAKjI,MAAMjC,eAA+BoK,EAAaF,EAAgB,EAAKjI,MAAMjC,eAAegH,UAC3HzG,cAAwD8J,IAA9CH,EAAgB,EAAKjI,MAAMjC,eAA+BoK,EAAaF,EAAgB,EAAKjI,MAAMjC,eAAeiH,UAC3HzG,eAAyD6J,IAA9CH,EAAgB,EAAKjI,MAAMjC,eAA+BoK,EAAaF,EAAgB,EAAKjI,MAAMjC,eAAekH,WAC5HzG,eAAyD4J,IAA9CH,EAAgB,EAAKjI,MAAMjC,eAA+BoK,EAAaF,EAAgB,EAAKjI,MAAMjC,eAAemH,cAhQhI,EAAKlF,MAAQ,CACTlC,SAAU,GACVC,cAAe,KACfC,iBAAkB,KAClBC,IAAK,IACLC,OAAQ,IACRC,UAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzDC,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1DC,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxDC,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxDC,UAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxDC,UAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzDC,YAAa,MAfF,E,gEAwQE,IAAD,OAElB8I,MAAM,GAAD,OAAI7C,EAAJ,iBACA8C,MAAK,SAAAC,GACF,IAAIA,EAASC,GACT,MAAM,IAAIC,MAAM,+BAEpB,OAAOF,EAASG,UAEnBJ,MAAK,SAAAQ,GACF,EAAKnH,SAAS,CACV/C,SAAUkK,IAEXA,EAAa3G,OAAS,GACvB,EAAKuD,iBAAiB,EAAK5E,MAAMjC,kBAGtC8J,OAAM,SAAAC,GAAG,OAAIpF,QAAQC,IAAImF,EAAIhI,c,+BAQhC,IAAMuI,EAAe,CACjBvK,SAAUiD,KAAKf,MAAMlC,SACrBC,cAAegD,KAAKf,MAAMjC,cAC1BC,iBAAkB+C,KAAKf,MAAMhC,iBAC7BC,IAAK8C,KAAKf,MAAM/B,IAChBC,OAAQ6C,KAAKf,MAAM9B,OACnBC,UAAW4C,KAAKf,MAAM7B,UACtBC,WAAY2C,KAAKf,MAAM5B,WACvBC,SAAU0C,KAAKf,MAAM3B,SACrBC,SAAUyC,KAAKf,MAAM1B,SACrBC,UAAUwC,KAAKf,MAAMzB,UACrBC,UAAWuC,KAAKf,MAAMxB,UACtBC,YAAasC,KAAKf,MAAMvB,YACxBC,oBAAqBqC,KAAKrC,oBAC1BC,UAAWoC,KAAKpC,UAChBC,aAAcmC,KAAKnC,aACnBC,WAAYkC,KAAKlC,WACjBC,cAAeiC,KAAKjC,cACpBC,cAAegC,KAAKhC,cACpBC,YAAa+B,KAAK/B,YAClBC,cAAe8B,KAAK9B,cACpBC,WAAY6B,KAAK7B,YAGzB,OACE,sBAAME,UAAU,MAAhB,SACE,eAAC,EAAakJ,SAAd,CAAuB9H,MAAO6H,EAA9B,UACE,cAAC,IAAD,CACEE,OAAK,EACLC,KAAM,IACNC,UAAWtJ,IACb,cAAC,IAAD,CACEoJ,OAAK,EACLC,KAAM,iBACNC,UAAW9I,IACb,cAAC,IAAD,CACE4I,OAAK,EACLC,KAAM,SACNC,UAAWhE,IACb,cAAC,IAAD,CACE8D,OAAK,EACLC,KAAM,eACNC,UAAW1I,a,GA9ULL,aAAZiF,EACG7C,YAAcnE,EAoVRgH,QC3Vf+D,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ee72bfb3.chunk.js","sourcesContent":["import React from 'react'\n\nconst TrBotContext = React.createContext({\n    patterns: [],\n    patternSelect: 0,\n    currentPatternId: null,\n    bpm: 120,\n    volume: 100,\n    kickSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    snareSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    hh1Steps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    hh2Steps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    clapSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    percSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    currentStep: null,\n    updatePatternSelect: () => {},\n    updateBpm: () => {},\n    updateVolume: () => {},\n    updateStep: () => {},\n    playSequencer: () => {},\n    stopSequencer: () => {},\n    savePattern: () => {},\n    deletePattern: () => {},\n    clearSteps: () => {}\n})\n\nexport default TrBotContext;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom'\nimport './LandingPage.css'\n\nclass LandingPage extends Component {\n\n    render() {\n        return (\n            <div className='LandingPage'>\n                <h1>Welcome to TR-BOT</h1>\n                <div className='LandingPage_intro'>\n                    <p>\n                    The TR-BOT is a drum machine application that allows a user to create musical percussion tracks in their browser. The TR-BOT's name is inspired by the iconic line of Roland's hardware drum machines (i.e. TR-808, TR-909, TR-606) and by default, the app supplies 6 individual drum sounds that include:\n                    </p>\n                    <ul>\n                        <li>Kick drum (Kick)</li>\n                        <li>Snare drum (Snare)</li>\n                        <li>High Hat 1 (HH1)</li>\n                        <li>High Hat 2 (HH2)</li>\n                        <li>Handclap (Clap)</li>\n                        <li>Percussion (Perc)</li>\n                    </ul>\n                    <p>\n                    The grid is that of a 16-step sequencer where each square (or step) represents a subdivision of musical time from left to right. The user is encouraged to experiment with building their own unique patterns by toggling any of the steps on or off. \n                    </p>\n                    <p>\n                    Now let's get to making some music!\n                    </p>\n                </div>\n                <h3>Login:</h3>\n                <form className='LandingPage_login'>\n                    <div className='LandingPage_input'>\n                        <label htmlFor='username'>Username:</label>\n                        <input type='text' id='username' name='username'/>\n                    </div>\n                    <div className='LandingPage_input'>\n                        <label htmlFor='password'>Password:</label>\n                        <input type='password' id='password' name='password'/>\n                    </div>\n                    <Link to={'/trbot'}>\n                        <button type='submit'>Submit</button>\n                    </Link>\n                </form>\n                <Link to={'/createaccount'}>\n                    <p className='LandingPage_signup'>Not a user? Sign Up</p>\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport default LandingPage;","import React, {Component} from 'react';\nimport './CreateAccount.css'\nimport {Link} from 'react-router-dom'\n\n\nclass CreateAccount extends Component {\n\n    render() {\n        return(\n            <div className='CreateAccount'>\n                <h1>Create Account:</h1>\n                <form className='CreateAccount_form'>\n                    <div className='CreateAccount_input'>\n                        <label htmlFor='username'>Username:</label>\n                        <input type='text' id='username' name='username'/>\n                    </div>\n                    <div className='CreateAccount_input'>\n                        <label htmlFor='password'>Password:</label>\n                        <input type='password' id='password' name='password'/>\n                    </div>\n                    <div className='CreateAccount_input'>\n                        <label htmlFor='confirm_password'>Confirm Password:</label>\n                        <input type='password' id='confirm_password' name='confirm_password'/>\n                    </div>\n                    <div className='CreateAccount_buttons'>\n                        <Link to={'/'}>\n                            <button type='submit'>Submit</button>\n                        </Link>\n                        <Link to={'/'}>\n                            <button>Cancel</button>\n                        </Link>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default CreateAccount;","import React from 'react'\nimport './ValidateNameEntry.css'\n\nexport default function ValidateNameEntry(props) {\n    if (props.message) {\n        return <div className='ValidateNameEntry_error'>{props.message}</div>\n    }\n    return <></>\n}","import React, {Component} from 'react';\nimport './SavePattern.css'\nimport {Link} from 'react-router-dom'\nimport TrBotContext from '../TrBotContext.js'\nimport ValidateNameEntry from '../ValidateNameEntry/ValidateNameEntry'\n\nclass SavePattern extends Component {\n    static contextType = TrBotContext\n\n    state = {\n        name: '',\n        touched: false\n    }\n\n    handleSubmit = (event, callback) => {\n        event.preventDefault()\n        const patternData = {\n            \"name\": event.target.pattern_name.value,\n            \"user_id\": 0,\n            \"kick_steps\": this.context.kickSteps,\n            \"snare_steps\": this.context.snareSteps,\n            \"hh1_steps\": this.context.hh1Steps,\n            \"hh2_steps\": this.context.hh2Steps,\n            \"clap_steps\": this.context.clapSteps,\n            \"perc_steps\": this.context.percSteps\n        }\n        callback(patternData)\n        this.props.history.push('/trbot')\n    }\n\n    changeNameState = (event) => {\n        this.setState({\n            name: event.target.value,\n            touched: true\n        })\n    }\n\n    validateNameEntry() {\n        const nameEntry = this.state.name.trim()\n        const existingNames = this.context.patterns.map(pattern => pattern.name.toLowerCase())\n        \n\n        if(nameEntry.length === 0 && this.state.touched) {\n            return 'Name is required'\n        } else if(existingNames.indexOf(nameEntry.toLowerCase()) !== -1) {\n            return 'This name already exists'\n        }\n\n    }\n\n    render() {\n        return (\n            \n            <div className='SavePattern'>\n                <h2>Save Pattern:</h2>\n                <TrBotContext.Consumer>\n                    {({savePattern }) => (\n                        <form className='SavePattern_form' onSubmit={(e) => this.handleSubmit(e, savePattern)}>\n                            <div className='SavePattern_input'>\n                                <label htmlFor='pattern_name'>Pattern Name:</label>\n                                <input type='text' id='pattern_name' name='pattern_name' onChange={(e) => this.changeNameState(e)}required/>\n                                <ValidateNameEntry message={this.validateNameEntry()}/>\n                            </div>\n                            <div className='SavePattern_buttons'>\n                                <button type='submit' disabled={!this.state.touched || this.state.name.trim().length === 0 ? true : false}>Submit</button>\n                                <Link to={'/trbot'}>\n                                    <button>Cancel</button>\n                                </Link>\n                            </div>   \n                        </form>\n                    )}\n                </TrBotContext.Consumer>\n            </div>\n        )\n    }\n}\n\nexport default SavePattern;","import * as Tone from 'tone'\n\nexport const kickSampler =\n    \n    new Tone.Sampler({\n        urls: {\n            C4: \"trbotkick.mp3\",\n        },\n        baseUrl: \"/audio/\",\n    })\n\nexport const snareSampler =\n    \n    new Tone.Sampler({\n        urls: {\n            C4: \"trbotsnare.mp3\", \n        },\n        baseUrl: \"/audio/\",\n    })\n\nexport const hh1Sampler =\n    \n    new Tone.Sampler({\n        urls: {\n            C4: \"trbothh1.mp3\", \n        },\n        baseUrl: \"/audio/\",\n    })\n\nexport const hh2Sampler =\n    \n    new Tone.Sampler({\n        urls: {\n            C4: \"trbothh2.mp3\", \n        },\n        baseUrl: \"/audio/\",\n    })\n\nexport const clapSampler =\n    \n    new Tone.Sampler({\n        urls: {\n            C4: \"trbotclap.mp3\", \n        },\n        baseUrl: \"/audio/\",\n    })\n\nexport const percSampler =\n    \n    new Tone.Sampler({\n        urls: {\n            C4: \"trbotperc.mp3\", \n        },\n        baseUrl: \"/audio/\",\n    })\n\n\nexport const allSampler =\n    \n    new Tone.Sampler({\n        urls: {\n            C4: \"trbotkick.mp3\",\n            D4: \"trbotsnare.mp3\",\n            E4: \"trbothh1.mp3\",\n            F4: \"trbothh2.mp3\",\n            G4: \"trbotclap.mp3\", \n            A4: \"trbotperc.mp3\",\n        },\n        onload: function() {console.log('samples loaded')},\n        baseUrl: \"/audio/\",\n    })\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom'\nimport './Header.css'\nimport * as Tone from 'tone'\nimport {allSampler} from '../samplers.js'\n\nclass Header extends Component {\n\n    handleClick = () => {\n        Tone.Transport.stop() \n        Tone.Transport.cancel()\n        allSampler.disconnect()\n    }\n\n    render() {\n        return (\n            <div className='Header'>\n                <header>\n                    <Link to={'/trbot'}>\n                        <h1>TR-BOT</h1>\n                    </Link>\n                     <button onClick={() => this.handleClick()}>\n                        <Link to={'/'}>\n                            Log Out\n                        </Link>\n                    </button>\n                </header>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport './TransportControls.css'\nimport TrBotContext from '../TrBotContext.js'\n\nclass TransportControls extends Component {\n    static contextType = TrBotContext\n\n    handleClick = (callback) => {\n      callback()\n    }\n\n    render() {\n        \n        return (\n            <div className='TransportControls'>\n              <TrBotContext.Consumer>\n                {({playSequencer, stopSequencer}) => (\n                  <>\n                  <button onClick={() => this.handleClick(playSequencer)}>Play</button>\n                  <button onClick={() => this.handleClick(stopSequencer)}>Stop</button>\n                  </>\n                )}\n              </TrBotContext.Consumer>\n            </div>\n        )\n    }\n\n}\n\nexport default TransportControls;","import React, {Component} from 'react';\nimport './TransportSliders.css'\nimport TrBotContext from '../TrBotContext.js'\n\nclass TransportSliders extends Component {\n    static contextType = TrBotContext\n\n    handleChange = (e, callback) => {\n        callback(e.target.value)\n    }\n\n    render() {\n        const volume = this.context.volume\n        const bpm = this.context.bpm\n\n        return (\n            <div className='TransportSliders'>\n                <TrBotContext.Consumer>\n                    {({updateBpm, updateVolume}) => (\n                        <>\n                        <label htmlFor=\"volume\">Volume: {volume}</label>\n                        <input type=\"range\" id=\"volume\" name=\"volume\" min=\"0\" max=\"100\" defaultValue={100} onChange={(e) => this.handleChange(e, updateVolume)}/>  \n                        <label htmlFor=\"bpm\">BPM: {bpm}</label>\n                        <input type=\"range\" id=\"bpm\" name=\"bpm\" min=\"40\" max=\"300\" defaultValue={120}  onChange={(e) => this.handleChange(e, updateBpm)}/>\n                        </>\n                    )}\n                </TrBotContext.Consumer>\n            </div>\n        )\n    }\n\n}\n\nexport default TransportSliders;","import React, {Component} from 'react';\nimport './Transport.css'\nimport TransportControls from '../TransportControls/TransportControls';\nimport TransportSliders from '../TransportSliders/TransportSliders';\n\nclass Transport extends Component {\n\n    render() {\n        return (\n            <div className='Transport'>\n                <TransportControls />\n                <TransportSliders />\n            </div>\n        )\n    }\n\n}\n\nexport default Transport;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom'\nimport './PatternSelect.css'\nimport * as Tone from 'tone'\nimport { v4 as uuidv4 } from 'uuid';\nimport TrBotContext from '../TrBotContext.js'\nimport {allSampler} from '../samplers.js'\n\nclass PatternSelect extends Component {\n    static contextType = TrBotContext\n\n    handleChange = (e, callback) => {\n        Tone.Transport.stop() //stop playback\n        Tone.Transport.cancel()\n        allSampler.disconnect()\n   \n        const index = e.target.value\n        const id = this.context.patterns[index].id\n\n        callback(index, id)\n    }\n\n    handleClick = (callback) => {\n        const id = this.context.currentPatternId\n        console.log(callback)\n        callback(id)\n    }\n\n    stopPlayback = () => {\n        Tone.Transport.stop() \n        Tone.Transport.cancel()\n        allSampler.disconnect()\n    }\n\n    render() {\n        function placeHolder(id) { //conditional placeholder option when no saved patterns exist\n            if(id === null) {\n                return (\n                    <option value=\"\" key='xxx' hidden>New Pattern</option>\n                )\n            }\n        }\n        let patternOptions = this.context.patterns.map((pattern, index) => {\n            return(\n            <option name={pattern.name} value={index} key={uuidv4()}>{pattern.name}</option>\n            )\n        })\n\n        return (\n            <div className='PatternSelect'>\n                <TrBotContext.Consumer>\n                    {({updatePatternSelect, deletePattern}) => (\n                        <>\n                         <label htmlFor=\"pattern\">Pattern:</label>\n                         <select id=\"pattern\" name=\"pattern\" value={this.context.patternSelect === null ? '' : this.context.patternSelect} onChange={(e) => this.handleChange(e, updatePatternSelect)}>\n                            {placeHolder(this.context.currentPatternId)}\n                            {patternOptions}\n                         </select>\n                         <Link to={'savepattern'}>\n                            <button className='PatternSelect_button' onClick={() => this.stopPlayback()}>Save</button>\n                         </Link>\n                    <button className='PatternSelect_button' onClick={() => this.handleClick(deletePattern)}>Delete</button>\n                        </>\n                    )} \n                </TrBotContext.Consumer>\n            </div>\n        )\n    }\n}\n\nexport default PatternSelect;","import React, {Component} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './Instrument.css'\nimport TrBotContext from '../TrBotContext.js'\n\n\n\nclass Instrument extends Component {\n    static contextType = TrBotContext\n\n    handleClick = (e, value, instrument, callback) => {\n        const stepIndex = e.target.id\n        callback(stepIndex, value, instrument)\n        \n\n    }\n   \n    render() {\n        let currentStep = this.context.currentStep\n        const instrument = this.props.instrument\n        const steps = this.props.instrumentSteps.map((step, index) => {\n            \n            if(step === 1){\n                return (\n                    <TrBotContext.Consumer key={uuidv4()}>\n                        {({updateStep}) => (\n                            <span key={uuidv4()} className={`step clicked ${currentStep === index ? 'current_step' : ''}`} id={index} value={1} onClick={(e) => this.handleClick(e, 1, instrument, updateStep)}>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                        )}\n                    </TrBotContext.Consumer>\n                )\n            } else if(step === 0) {\n                return (\n                    <TrBotContext.Consumer key={uuidv4()}>\n                            {({updateStep}) => (\n                                <span key={uuidv4()} className={`step ${currentStep === index ? 'current_step' : ''}`} id={index} value={0} onClick={(e) => this.handleClick(e, 0, instrument, updateStep)}>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                            )}\n                        </TrBotContext.Consumer>\n                    )\n                }\n            })\n    \n        return (\n            <div className='Instrument row'>\n                {steps}\n            </div>\n        )\n    }\n}\n\nexport default Instrument;","import React, {Component} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './StepTracker.css'\nimport TrBotContext from '../TrBotContext.js'\n\n\n\nclass StepTracker extends Component {\n\n    render() {\n        return (\n            <div className='StepTracker'>\n                <span key={uuidv4()} className={`tracker first`}>1</span>\n                <span key={uuidv4()} className={`tracker second`}>5</span>\n                <span key={uuidv4()} className={`tracker third`}>9</span>\n                <span key={uuidv4()} className={`tracker fourth`}>13</span>\n            </div>\n        )\n    }\n}\n\nexport default StepTracker;\n\n\n\n\n","import React, {Component} from 'react';\nimport './Sequencer.css'\nimport TrBotContext from '../TrBotContext.js'\nimport Instrument from '../Instrument/Instrument'\nimport StepTracker from '../StepTracker/StepTracker'\n\n\nclass Sequencer extends Component {\n    static contextType = TrBotContext\n\n\n\n    render() {\n\n        return (\n            <div className='Sequencer'>\n                <div className='Sequencer_display'>\n                    <div className='Sequencer_channel'>\n                        <label>Kick</label>\n                        <Instrument instrumentSteps={this.context.kickSteps} instrument='kick' />\n                    </div>\n                    <div className='Sequencer_channel'>\n                        <label>Snare</label>\n                        <Instrument instrumentSteps={this.context.snareSteps} instrument='snare' />\n                    </div>\n                    <div className='Sequencer_channel'>\n                        <label>HH1</label>\n                        <Instrument instrumentSteps={this.context.hh1Steps} instrument='hh1' />\n                    </div>\n                    <div className='Sequencer_channel'>\n                        <label>HH2</label>\n                        <Instrument instrumentSteps={this.context.hh2Steps} instrument='hh2'/>\n                    </div>\n                    <div className='Sequencer_channel'>\n                        <label>Clap</label>\n                        <Instrument instrumentSteps={this.context.clapSteps} instrument='clap' />\n                    </div>\n                    <div className='Sequencer_channel'>\n                        <label>Perc</label>\n                        <Instrument instrumentSteps={this.context.percSteps} instrument='perc'/>\n                    </div>\n                </div>\n                <div className='StepTracker_channel'>\n                        <StepTracker instrumentSteps={this.context.stepTracker} instrument='' />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Sequencer;\n\n//<Instrument instrument={instrObj.key} />","import React, {Component} from 'react';\nimport './ClearSteps.css'\nimport TrBotContext from '../TrBotContext.js'\n\nclass ClearSteps extends Component {\n    static contextType = TrBotContext\n\n    handleClick = (callback) => {\n      callback()\n    }\n\n    render() {\n        \n        return (\n            <div className='ClearSteps'>\n              <TrBotContext.Consumer>\n                {({clearSteps}) => (\n                  <button onClick={() => this.handleClick(clearSteps)}>Clear Steps</button> \n                )}\n              </TrBotContext.Consumer>\n            </div>\n        )\n    }\n\n}\n\nexport default ClearSteps;","import React, {Component} from 'react';\nimport './Interface.css'\nimport Header from '../Header/Header'\nimport Transport from '../Transport/Transport'\nimport PatternSelect from '../PatternSelect/PatternSelect'\nimport Sequencer from '../Sequencer/Sequencer'\nimport ClearSteps from '../ClearSteps/ClearSteps'\n\n\n\nclass Interface extends Component {\n    \n    render() {\n        \n        return (\n            <div className='Interface'>\n                <Header />\n                <Transport />\n                <ClearSteps />\n                <Sequencer />\n                <PatternSelect />\n            </div>\n        )\n    }\n}\n\nexport default Interface;","export const API_ENDPOINT =`https://desolate-depths-97545.herokuapp.com/`\n","import React, {Component} from 'react';\nimport './App.css'\nimport TrBotContext from './TrBotContext.js'\nimport {Route} from 'react-router-dom'\nimport * as Tone from 'tone'\nimport LandingPage from './LandingPage/LandingPage'\nimport CreateAccount from './CreateAccount/CreateAccount';\nimport SavePattern from './SavePattern/SavePattern'\nimport Interface from './Interface/Interface'\nimport {allSampler} from './samplers.js'\nimport {API_ENDPOINT} from './config'\n\nclass App extends Component {\n  static contextType = TrBotContext\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            patterns: [],\n            patternSelect: null,\n            currentPatternId: null,\n            bpm: 120,\n            volume: 100,\n            kickSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            snareSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            hh1Steps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            hh2Steps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            clapSteps:[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            percSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            currentStep: null\n        }\n\n    }\n\n\n    createInstrSteps = (patternSelect) => {\n      this.setState({\n          kickSteps: this.state.patterns[patternSelect].kick_steps,\n          snareSteps: this.state.patterns[patternSelect].snare_steps,\n          hh1Steps: this.state.patterns[patternSelect].hh1_steps,\n          hh2Steps: this.state.patterns[patternSelect].hh2_steps,\n          clapSteps: this.state.patterns[patternSelect].clap_steps,\n          percSteps: this.state.patterns[patternSelect].perc_steps,\n      })\n    }\n\n\n    updatePatternSelect = (index, patternId) => {\n      this.setState({\n          patternSelect: index,\n          currentPatternId: patternId\n\n      }, () => {\n          this.createInstrSteps(this.state.patternSelect)\n      }) \n      \n    }\n\n    updateBpm = (bpm) => {\n      this.setState({\n          bpm: bpm\n      })\n      Tone.Transport.bpm.value = this.state.bpm\n    }\n\n    updateVolume = (vol) => {\n      this.setState({\n          volume: vol,\n      })\n      this.gainControl()\n    }\n\n    gainControl = () => {\n      allSampler.disconnect()\n      const gain = new Tone.Gain(this.state.volume / 100 < .05 ? 0 : this.state.volume / 100 )\n      allSampler.connect(gain)\n      gain.toDestination()\n    }\n\n\n    updateStep = (stepIndex, value, instrument) => {\n      \n      switch (instrument) {\n          case 'kick':\n              const oldKickSteps = this.state.kickSteps;\n              oldKickSteps[stepIndex] = 1 - value\n              const newKickSteps = oldKickSteps\n\n              this.setState({\n                  kickSteps: newKickSteps\n              })\n              break;\n          case 'snare':\n              const oldSnareSteps = this.state.snareSteps;\n              oldSnareSteps[stepIndex] = 1 - value\n              const newSnareSteps = oldSnareSteps\n\n              this.setState({\n                  snareSteps: newSnareSteps\n              })\n              break;\n          case 'hh1':\n              const oldHh1Steps = this.state.hh1Steps;\n              oldHh1Steps[stepIndex] = 1 - value\n              const newHh1Steps = oldHh1Steps\n\n              this.setState({\n                  hh1Steps: newHh1Steps\n              })\n              break;\n          case 'hh2':\n              const oldHh2Steps = this.state.hh2Steps;\n              oldHh2Steps[stepIndex] = 1 - value\n              const newHh2Steps = oldHh2Steps\n              \n              this.setState({\n                  hh2Steps: newHh2Steps\n              })\n              break;\n          case 'clap':\n              const oldClapSteps = this.state.clapSteps;\n              oldClapSteps[stepIndex] = 1 - value\n              const newClapSteps = oldClapSteps\n              \n              this.setState({\n                  clapSteps: newClapSteps\n              })\n              break;\n          case 'perc':\n              const oldPercSteps = this.state.percSteps;\n              oldPercSteps[stepIndex] = 1 - value\n              const newPercSteps = oldPercSteps\n              \n              this.setState({\n                  percSteps: newPercSteps\n              })\n              break;\n          default:\n              console.log('That row does not exist')\n      }  \n    }\n\n    playSequencer = () => {\n      console.log('Play')\n      allSampler.disconnect()\n      Tone.Transport.cancel()\n      \n      this.gainControl()\n\n      const instrumentSeqs = [this.state.kickSteps, this.state.snareSteps, this.state.hh1Steps, this.state.hh2Steps, this.state.clapSteps, this.state.percSteps]\n      const notes = ['C4', 'D4', 'E4', 'F4', 'G4', 'A4']\n      let index = 0;\n\n      this.setState({\n          currentStep: 0\n      })\n\n      Tone.start()                    \n      Tone.Transport.scheduleRepeat(repeat, '16n')\n      Tone.Transport.scheduleRepeat(this.transportVisual, '16n')\n      Tone.Transport.start()\n      \n      \n      function repeat(time) {\n          let step = index % 16;\n          for (let i = 0; i < notes.length; i++) {  //replace notes with samplers\n              //let sampler = samplers[i];\n              let note = notes[i]\n              let sequence = instrumentSeqs[i];\n              if (sequence[step] === 1)allSampler.triggerAttackRelease([note], '16n', time) //allSampler with sampler\n          }\n          index++;\n      }\n\n    }\n\n    transportVisual = () => {\n        this.setState(prevState => ({\n            currentStep: (prevState.currentStep + 1) % 16})\n        )\n    }\n\n    stopSequencer = () => {\n      console.log('Stop')\n      Tone.Transport.stop()\n      Tone.Transport.cancel()\n      allSampler.disconnect()\n      this.setState({\n          currentStep: null\n      })\n    }\n\n    clearSteps = () => {\n        console.log('Steps cleared')\n        this.setState({\n            kickSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            snareSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            hh1Steps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            hh2Steps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            clapSteps:[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            percSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        })\n\n        this.stopSequencer()\n    }\n\n    savePattern = (patternData) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json' },\n            body: JSON.stringify(patternData)\n        }\n\n        fetch(`${API_ENDPOINT}api/patterns`, requestOptions)\n            .then(response => {\n                if(!response.ok) {\n                    throw new Error('Could not save pattern')\n                }\n                return response.json()\n            })\n            .catch(err => console.log(err.message))\n               \n        console.log('Pattern Saved')\n\n        this.state.patterns.push(patternData)\n        \n        setTimeout(() => { // refreshes pattern list and updates pattern ID's from database and sets up new blank pattern\n            fetch(`${API_ENDPOINT}api/patterns`)\n                .then(response => {\n                    if(!response.ok) {\n                        throw new Error('Could not retrieve updated patterns')\n                    }\n                    return response.json()\n                })\n                .then(responseJson => {\n                    this.setState({\n                        patterns: responseJson,\n                        currentPatternId: null,\n                        patternSelect: null,\n                        kickSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                        snareSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                        hh1Steps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                        hh2Steps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                        clapSteps:[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                        percSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]  \n                    })\n                })\n                .catch(err => console.log(err.message))\n        }, 200)\n    }\n\n    deletePattern = (id) => {\n        this.stopSequencer() //stop playback\n        \n        fetch(`${API_ENDPOINT}api/patterns/${id}`, {method: 'DELETE'})\n          .then(response => {\n              if(!response.ok) throw new Error('Could not delete pattern')  \n          })\n          .catch(err => console.log(err.message))\n\n\n        const newPatternsList = this.state.patterns.filter(pattern => pattern.id !== id)\n\n        const emptySteps = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        \n        this.setState({\n            patterns: newPatternsList,\n            currentPatternId: newPatternsList[this.state.patternSelect] === undefined ? null : newPatternsList[this.state.patternSelect].id,\n            kickSteps: newPatternsList[this.state.patternSelect] === undefined ? emptySteps : newPatternsList[this.state.patternSelect].kick_steps,\n            snareSteps: newPatternsList[this.state.patternSelect] === undefined ? emptySteps : newPatternsList[this.state.patternSelect].snare_steps,\n            hh1Steps: newPatternsList[this.state.patternSelect] === undefined ? emptySteps : newPatternsList[this.state.patternSelect].hh1_steps,\n            hh2Steps: newPatternsList[this.state.patternSelect] === undefined ? emptySteps : newPatternsList[this.state.patternSelect].hh2_steps,\n            clapSteps: newPatternsList[this.state.patternSelect] === undefined ? emptySteps : newPatternsList[this.state.patternSelect].clap_steps,\n            percSteps: newPatternsList[this.state.patternSelect] === undefined ? emptySteps : newPatternsList[this.state.patternSelect].perc_steps\n\n        })\n    }\n\n    componentDidMount() {\n\n      fetch(`${API_ENDPOINT}api/patterns`)\n          .then(response => {\n              if(!response.ok) {\n                  throw new Error('Could not retrieve patterns')\n              }\n              return response.json()\n          })\n          .then(responseJson => {\n              this.setState({\n                  patterns: responseJson\n              })\n              if(responseJson.length > 0) {\n                this.createInstrSteps(this.state.patternSelect)\n              }\n          })\n          .catch(err => console.log(err.message))\n\n          \n      \n    }\n\n\n    render() {\n        const contextValue = {\n            patterns: this.state.patterns,\n            patternSelect: this.state.patternSelect,\n            currentPatternId: this.state.currentPatternId,\n            bpm: this.state.bpm,\n            volume: this.state.volume,\n            kickSteps: this.state.kickSteps,\n            snareSteps: this.state.snareSteps,\n            hh1Steps: this.state.hh1Steps,\n            hh2Steps: this.state.hh2Steps,\n            clapSteps:this.state.clapSteps,\n            percSteps: this.state.percSteps,\n            currentStep: this.state.currentStep,\n            updatePatternSelect: this.updatePatternSelect,\n            updateBpm: this.updateBpm,\n            updateVolume: this.updateVolume,\n            updateStep: this.updateStep,\n            playSequencer: this.playSequencer,\n            stopSequencer: this.stopSequencer,\n            savePattern: this.savePattern,\n            deletePattern: this.deletePattern,\n            clearSteps: this.clearSteps\n        }\n\n    return (\n      <main className='App'>\n        <TrBotContext.Provider value={contextValue}>\n          <Route\n            exact\n            path={'/'}\n            component={LandingPage}/>\n          <Route\n            exact\n            path={'/createaccount'}\n            component={CreateAccount}/>\n          <Route\n            exact\n            path={'/trbot'}\n            component={Interface}/>\n          <Route\n            exact\n            path={'/savepattern'}\n            component={SavePattern}/>\n          </TrBotContext.Provider>\n      </main>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n  );"],"sourceRoot":""}